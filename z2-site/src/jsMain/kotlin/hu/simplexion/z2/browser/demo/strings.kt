package hu.simplexion.z2.browser.demo

import hu.simplexion.z2.commons.i18n.LocalizedTextStore
import hu.simplexion.z2.commons.util.UUID

@Suppress("ClassName")
object strings : LocalizedTextStore(UUID("c6a52ab3-7a5a-4f07-ad49-239775845386")) {
    val components by "Components"
    val pages by "Pages"
    val button by "Button"
    val filledButton by "Filled Button"
    val calendar by "Calendar"
    val textButton by "Text Button"
    val smallDenseTextButton by "Small Dense Text Button"
    val settings by "Settings"
    val segment1 by "Segment 1"
    val segment2 by "Segment 2"
    val segment3 by "Segment 3"
    val textField by "Text Field"
    val label by "Label"
    val supportingText by "Supporting Text"
    val modal by "Modal"
    val confirmDialog by "Confirm Dialog"
    val confirmMessage by "Nothing happens, whichever button you click."
    val card by "Card"
    val loremShort by "Lorem ipsum dolor sit amet, consectetur adipiscing elit"
    val lorem by "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
    val headline by "Headline"
    val popup by "Popup"
    val menu by "Menu"
    val menuItem1 by "Menu Item 1"
    val menuItem2 by "Menu Item 2"
    val snackbar by "Snackbar"
    val click by "Click"
    val switch by "Switch"
    val table by "Table"
    val container by "Container"
    val datepicker by "Date Picker"
    val navigationDrawer by "Navigation Drawer"
    val inbox by "Inbox"
    val outbox by "Outbox"
    val favourites by "Favourites"
    val trash by "Trash"
    val applicationTitle by "Z2 Browser Demo"
    val main by "Main Page"
    val pageNotFound by "Page not found."
    val tableTitle by "Table Title"
    val headerA by "Header A"
    val headerB by "Header B"
    val other by "Other"
}